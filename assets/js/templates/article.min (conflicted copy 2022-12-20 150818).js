(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
const LocalStore = require('./local.store')
const store = new LocalStore()

function respond_comment( e ) {
  e.preventDefault()
  const form    = e.target
  const comment = make_comment( form, store )
  post_comment( comment )
  .then( response => {
    if ( response.status === 'ok' ) {

      // form: reset and hide form
      form.reset()
      form.blur()

      // create newly posted comment
      const article = make_comment_el( response.data )

      // append new comment to comment thread
      // before <form> (blue circle)

      let thread

      // first check if the form is the toolbar form
      const form_parent = form.parentNode
      if ( form_parent.classList.contains( 'toolbar' ) ) {
        // make a new comment thread for this block
        thread = make_comment_thread_el( form.cloneNode( true ) )
        const block_id = form.getAttribute( 'data-block-id' )
        const block = document.getElementById( block_id )
        const aside = block.querySelector( 'aside' )
        const thread_form = Array.from( thread.children )[0]
        thread.insertBefore( article, thread_form )
        aside.appendChild( thread )
      } else {
        thread = form_parent
        thread.insertBefore(article, form)
      }

      // update comment count
      const comment_count = document.querySelector('#comment_count')
      comment_count.innerHTML = new Number( comment_count.innerHTML ) + 1

      article.focus()

    }
  })
}

function make_comment( form, store ) {
  const chilren           = Array.from( form.children )
  const csrf              = form.getAttribute( 'data-csrf' )
  const article_slug      = form.getAttribute( 'data-article-slug' )
  const block_id          = form.getAttribute( 'data-block-id' )
  const selection_type    = form.getAttribute( 'data-block-selection-type' )
  const selection_text_id = form.getAttribute( 'data-block-selection-text-id' )
  const selection_text    = store.getByID(selection_text_id)
  const author            = chilren.find( c => c.name == 'author' ).value
  const text              = chilren.find( c => c.name == 'body' ).value
  const ts                = new Date().toISOString()
  return {
    slug: `test-${ ts }`,
    title: '',
    template: 'comment',
    csrf: csrf,
    content: {
      user: author,
      timestamp: ts,
      article_slug: article_slug,
      block_id: block_id,
      text: text,
      selection_type: selection_type,
      selection_text: selection_text,
      // selection_coords: selection_coords
    }
  }
}

function save_comment( comment ) {

}

function make_comment_thread_el( form, position ) {
  const thread = document.createElement( 'section' )
  thread.classList.add( 'thread' )
  thread.classList.add( 'new' )
  thread.appendChild( form )
  thread.style.setProperty( '--top', position.top + 'px' )
  thread.style.setProperty( '--left', position.left + 'px' )
  return thread
}

function make_comment_form_el( template_form, source_id, block_id, position ) {
  const form = template_form.cloneNode( true )
  form.setAttribute('data-block-selection-type', 'text')
  form.setAttribute('data-block-selection-text-id', source_id )
  form.setAttribute('data-block-id', block_id )
  form.onsubmit = respond_comment
  return form
}

function make_comment_el( data ) {

  // -- section
  const text_comment = document.createElement('section')
  const section_text = data.content.text
  text_comment.append(section_text)

  // -- footer
  const footer = document.createElement('footer')
  footer.classList.add( 'small_italic' )
  const date = document.createElement('p')
  const timestamp = document.createElement('time')
  // TODO set correct datetime format for timestamp `yyyy-mm-dd hh:mm:ss`
  timestamp.setAttribute('datetime', data.content.timestamp)
  date.append(timestamp)
  date.innerHTML = `On ${data.content.timestamp}`

  const user = document.createElement('p')
  user.innerHTML = `by ${data.content.user}`

  footer.append(date)
  footer.append(user)

  // -- append everything to <article>
  const article = document.createElement('article')
  article.setAttribute('tabindex', '0')

  article.append(text_comment)
  article.append(footer)

  return article

}

function post_comment( comment ) {
  const csrf = comment.csrf
  const article_slug = comment.content.article_slug
  const url  = `/api/pages/articles+${ article_slug }+comments`

  return fetch( `${ url }/children` , {
    method: "POST",
    headers: { "X-CSRF": csrf },
    body: JSON.stringify( comment )
  })
  .then(response => response.json())
  .then(response => {

    // set comment to be published
    return fetch( `${ url }+${ response.data.slug }/status`, {
      method: "PATCH",
      headers: { "X-CSRF": csrf },
      body: JSON.stringify( { status: 'listed' } )
    })
    .then(response => response.json())
    .then( response => response )
    .catch( error => console.error( error ) )

  })
    .then(response => response)
    .catch(error => console.error(error) )

}


module.exports = {
  respond_comment,
  post_comment,
  make_comment_el,
  make_comment_thread_el,
  make_comment_form_el,

}

},{"./local.store":3}],2:[function(require,module,exports){
const textHighlightMergeUnique = require('./text-highlights-merge-unique')

async function fetchArticleHighlightsFromAPI(article_slug) {
  const csrf = document.querySelector('.toolbar > form').getAttribute('data-csrf')
 
  const url = `/api/cosmo/${ article_slug }`
  return fetch(url, {
    method: "GET",
    headers: {
      "X-CSRF" : csrf
    }
  })
  .then(response => response.json())
  .then(response => {
    const newData = response
    textHighlightMergeUnique(newData)

  })
  .catch(error => {
    return []
  });

}

module.exports = fetchArticleHighlightsFromAPI

},{"./text-highlights-merge-unique":6}],3:[function(require,module,exports){
// <https://github.com/alienzhou/web-highlighter/blob/master/example/local.store.js>

class LocalStore {
    constructor(id) {
        this.key = id !== undefined ? `cosmo-highlight-${id}` : 'cosmo-highlight';
    }

    storeToJson() {
        const store = localStorage.getItem(this.key);
        let sources;
        try {
            sources = JSON.parse(store) || [];
        }
        catch (e) {
            sources = [];
        }
        return sources;
    }

    jsonToStore(stores) {
        localStorage.setItem(this.key, JSON.stringify(stores));
    }

    save(data) {
        const stores = this.storeToJson();
        const map = {};
        stores.forEach((store, idx) => map[store.id] = idx);

        if (!Array.isArray(data)) {
            data = [data];
        }

        data.forEach(store => {
            // update
            if (map[store.id] !== undefined) {
                stores[map[store.id]] = store;
            }
            // append
            else {
                stores.push(store);
            }
        })
        this.jsonToStore(stores);
    }

    forceSave(store) {
        const stores = this.storeToJson();
        stores.push(store);
        this.jsonToStore(stores);
    }

    remove(id) {
        const stores = this.storeToJson();
        let index = null;
        for (let i = 0; i < stores.length; i++) {
            if (stores[i].id === id) {
                index = i;
                break;
            }
        }
        stores.splice(index, 1);
        this.jsonToStore(stores);
    }

    getByID(id) {
        const stores = this.storeToJson();
        let index = null;
        for (let i = 0; i < stores.length; i++) {
          if (stores[i].id === id) {
            index = i;
            break;
          }
        }

        const store = stores.find(s => s.id === id);
        return store;
    }

    getAll() {
        return this.storeToJson();
    }

    removeAll() {
        this.jsonToStore([]);
    }
}

module.exports = LocalStore

},{}],4:[function(require,module,exports){
const fetchArticleHighlightsFromAPI = require('../fetch-article-highlights-from-api')
const textHighlight = require('../text-highlight')
const { respond_comment, post_comment } = require('../comments')

const comment_forms = document.querySelectorAll( '.comment_form' )
for ( const comment_form of comment_forms ) {
  comment_form.onsubmit = respond_comment
}

// synchronize text-highlights backend data with localStorage
const article_slug = window.location.pathname.split('/').pop().split('/').join('+')

;(async() => {
  await fetchArticleHighlightsFromAPI(article_slug)
})()

const article_element    = document.querySelector( 'main' )
const selection_toolbar  = document.querySelector( '.toolbar' )
const textRange = textHighlight(article_element, selection_toolbar)

},{"../comments":1,"../fetch-article-highlights-from-api":2,"../text-highlight":5}],5:[function(require,module,exports){
const Highlighter = require('web-highlighter')
const LocalStore = require('./local.store')
const {
  respond_comment,
  make_comment_el,
  make_comment_thread_el,
  make_comment_form_el,
} = require('./comments.js')

// <https://github.com/alienzhou/web-highlighter/blob/master/example/index.js>
function textHighlight(target, toolbar) {
  const highlighter = new Highlighter({
    wrapTag: 'span',
    exceptSelectors: ['.highlight-tip']
  })

  highlighter.setOption({
    style: {
      className: 'bgc-accent',
    },
  })

  const store = new LocalStore();

  // restore all highlights to Highlighter instance
  store.getAll().forEach(hs => {
    highlighter.fromStore(hs.startMeta, hs.endMeta, hs.text, hs.id)
  });

  // except for the CREATE event
  // any other event is triggered when interacting
  // with an existing selection span
  highlighter
    .on(Highlighter.event.CLICK, ({id}) => {
      console.log('click -', id);
    })
    .on(Highlighter.event.HOVER, ({id}) => {
      console.log('hover -', id);
      highlighter.addClass('highlight-wrap-hover', id);
    })
    .on(Highlighter.event.HOVER_OUT, ({id}) => {
      console.log('hover out -', id);
      highlighter.removeClass('highlight-wrap-hover', id);
    })
    .on(Highlighter.event.CREATE, ({sources}) => {

      // // create span to allow removing the selection
      // sources.forEach(s => {
      //   const position = getPosition(highlighter.getDoms(s.id)[0]);
      //   createTag(position.top, position.left, s.id);
      // });

      // what to do if sources is > 1 and we need to position the comment toolbar?
      // pick last source in the list?
      if ( sources.length ) {
        let source = sources[0]
        const selectionNode = highlighter.getDoms(source.id)[0]
        const block         = selectionNode.closest( 'section .block' )
        const block_id      = getBlockID( block )
        const aside         = block.querySelector( 'aside' )
        const template_form = aside.querySelector( '.thread form' )
        const form          = make_comment_form_el( template_form, source.id, block_id )
        const position      = get_position(selectionNode)
        const thread        = make_comment_thread_el( form, position )
        aside.appendChild( thread )
        form.firstElementChild.focus()
        // toggle_toolbar(position, toolbar, source.id, block_id)
        store.save(sources)
      }

    })
    .on(Highlighter.event.REMOVE, ({ids}) => {
      // TODO implement remove action
      console.log('remove -', ids);
      // ids.forEach(id => store.remove(id));
    });

  highlighter.run();
}

function getBlockID( block ) {
  if (block !== undefined && block !== null) {
    if (block.id) {
      return block.id
    }
  }

  return ''
}

const createTag = (top, left, id) => {
  const $span = document.createElement('span');
  $span.style.left = `${left - 20}px`;
  $span.style.top = `${top - 25}px`;
  $span.style.position = 'absolute';
  $span.dataset['id'] = id;
  $span.textContent = 'delete';
  $span.classList.add('highlight-tip');
  document.body.appendChild($span);
  console.log('create-tag =>', $span)
};

function toggle_toolbar(position, toolbar, sourceID, blockID) {
  const form = toolbar.querySelector('form')
  form.setAttribute('data-block-selection-type', 'text')
  form.setAttribute('data-block-selection-text-id', sourceID)
  form.setAttribute('data-block-id', blockID)

  toolbar.classList.remove( 'hidden' )

  toolbar.style.setProperty( '--top', position.top + 'px' )
  toolbar.style.setProperty( '--left', position.left + 'px' )
}

// <https://github.com/alienzhou/web-highlighter/blob/master/example/index.js#L55-L67>
function getPosition($node) {
  let offset = {
    top: 0,
    left: 0
  };
  while ($node) {
    offset.top += $node.offsetTop;
    offset.left += $node.offsetLeft;
    $node = $node.offsetParent;
  }
  return offset;
}


function get_position(node) {
  let offset = {
    top: 0,
    left: 0
  };

  offset.top += node.parentNode.getBoundingClientRect().top + document.documentElement.scrollTop
  offset.left += node.getBoundingClientRect().left + document.documentElement.scrollLeft

  return offset;
}

function update_form(blockInfo) {
  let form = document.querySelector('.toolbar form')
  form.dataset.blockId = blockInfo.id
  form.dataset.blockSelectionType = blockInfo.type
}

module.exports = textHighlight;

},{"./comments.js":1,"./local.store":3,"web-highlighter":7}],6:[function(require,module,exports){
const LocalStore = require('./local.store')

function textHighlightMergeUnique(newData) {
  // merge this array of text-highlights
  // w/ current localStorage['combo-highlight']
  const store = new LocalStore();
  let localStore = store.getAll();

  // <https://stackoverflow.com/a/54134237>
  const ids = new Set(localStore.map(d => d.id));
  const highlightsMerged = [...localStore, ...newData.filter(d => !ids.has(d.ID))];

  // the save function checksif the item
  // exists already, so we just pass
  // the entire dataset
  store.save(highlightsMerged)

}

module.exports = textHighlightMergeUnique

},{"./local.store":3}],7:[function(require,module,exports){
/*! web-highlighter v0.7.4 https://github.com/alienzhou/web-highlighter */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.Highlighter=t():e.Highlighter=t()}(window,(function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=7)}([function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.eventEmitter=t.INTERNAL_ERROR_EVENT=t.UNKNOWN_IDX=t.ROOT_IDX=t.getStylesheet=t.getDefaultOptions=t.CAMEL_DATASET_SPLIT_TYPE=t.CAMEL_DATASET_IDENTIFIER_EXTRA=t.CAMEL_DATASET_IDENTIFIER=t.DATASET_SPLIT_TYPE=t.DATASET_IDENTIFIER_EXTRA=t.DATASET_IDENTIFIER=t.STYLESHEET_ID=t.LOCAL_STORE_KEY=t.ID_DIVISION=void 0;var a=i(n(10)),l=i(n(2));t.ID_DIVISION=";",t.LOCAL_STORE_KEY="highlight-mengshou",t.STYLESHEET_ID="highlight-mengshou-style",t.DATASET_IDENTIFIER="highlight-id",t.DATASET_IDENTIFIER_EXTRA="highlight-id-extra",t.DATASET_SPLIT_TYPE="highlight-split-type",t.CAMEL_DATASET_IDENTIFIER=a.default(t.DATASET_IDENTIFIER),t.CAMEL_DATASET_IDENTIFIER_EXTRA=a.default(t.DATASET_IDENTIFIER_EXTRA),t.CAMEL_DATASET_SPLIT_TYPE=a.default(t.DATASET_SPLIT_TYPE);t.getDefaultOptions=function(){return{$root:document||document.documentElement,exceptSelectors:null,wrapTag:"span",verbose:!1,style:{className:"highlight-mengshou-wrap"}}};t.getStylesheet=function(){return"\n    ."+t.getDefaultOptions().style.className+" {\n        background: #ff9;\n        cursor: pointer;\n    }\n    ."+t.getDefaultOptions().style.className+".active {\n        background: #ffb;\n    }\n"},t.ROOT_IDX=-2,t.UNKNOWN_IDX=-1,t.INTERNAL_ERROR_EVENT="error";var u=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t}(l.default);t.eventEmitter=new u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UserInputEvent=t.SelectedNodeType=t.CreateFrom=t.EventType=t.ERROR=t.SplitType=void 0,function(e){e.none="none",e.head="head",e.tail="tail",e.both="both"}(t.SplitType||(t.SplitType={})),function(e){e.DOM_TYPE_ERROR="[DOM] Receive wrong node type.",e.DOM_SELECTION_EMPTY="[DOM] The selection contains no dom node, may be you except them.",e.RANGE_INVALID="[RANGE] Got invalid dom range, can't convert to a valid highlight range.",e.RANGE_NODE_INVALID="[RANGE] Start or end node isn't a text node, it may occur an error.",e.DB_ID_DUPLICATE_ERROR="[STORE] Unique id conflict.",e.CACHE_SET_ERROR="[CACHE] Cache.data can't be set manually, please use .save().",e.SOURCE_TYPE_ERROR="[SOURCE] Object isn't a highlight source instance.",e.HIGHLIGHT_RANGE_FROZEN="[HIGHLIGHT_RANGE] A highlight range must be frozen before render.",e.HIGHLIGHT_SOURCE_RECREATE="[HIGHLIGHT_SOURCE] Recreate highlights from sources error.",e.HIGHLIGHT_SOURCE_NONE_RENDER="[HIGHLIGHT_SOURCE] This highlight source isn't rendered. May be the exception skips it or the dom structure has changed."}(t.ERROR||(t.ERROR={})),function(e){e.CREATE="selection:create",e.REMOVE="selection:remove",e.MODIFY="selection:modify",e.HOVER="selection:hover",e.HOVER_OUT="selection:hover-out",e.CLICK="selection:click"}(t.EventType||(t.EventType={})),function(e){e.STORE="from-store",e.INPUT="from-input"}(t.CreateFrom||(t.CreateFrom={})),function(e){e.text="text",e.span="span"}(t.SelectedNodeType||(t.SelectedNodeType={})),function(e){e.touchend="touchend",e.mouseup="mouseup",e.touchstart="touchstart",e.click="click",e.mouseover="mouseover"}(t.UserInputEvent||(t.UserInputEvent={}))},function(e,t,n){"use strict";var r=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},o=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(r(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(){this.handlersMap=Object.create(null)}return e.prototype.on=function(e,t){return this.handlersMap[e]||(this.handlersMap[e]=[]),this.handlersMap[e].push(t),this},e.prototype.off=function(e,t){return this.handlersMap[e]&&this.handlersMap[e].splice(this.handlersMap[e].indexOf(t)>>>0,1),this},e.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];return this.handlersMap[e]&&this.handlersMap[e].slice().forEach((function(e){e.apply(void 0,o(t))})),this},e}();t.default=i},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(5)),i=n(9),a=function(){function e(e,t,n,r,o){this.startMeta=e,this.endMeta=t,this.text=n,this.id=r,this.__isHighlightSource={},o&&(this.extra=o)}return e.prototype.deSerialize=function(e,t){var n=i.queryElementNode(this,e),r=n.start,a=n.end,l=i.getTextChildByOffset(r,this.startMeta.textOffset),u=i.getTextChildByOffset(a,this.endMeta.textOffset);if(!t.Serialize.Restore.isEmpty()){var s=t.Serialize.Restore.call(this,l,u)||[];l=s[0]||l,u=s[1]||u}return new o.default(l,u,this.text,this.id,!0)},e}();t.default=a},function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},o=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},i=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(o(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0}),t.hasClass=t.removeAllClass=t.removeClass=t.addClass=t.addEventListener=t.removeEventListener=t.forEach=t.getHighlightById=t.getHighlightsByRoot=t.getExtraHighlightId=t.getHighlightId=t.isHighlightWrapNode=void 0;var a=n(0);t.isHighlightWrapNode=function(e){return!!e.dataset&&!!e.dataset[a.CAMEL_DATASET_IDENTIFIER]};var l=function(e,n){for(var r=!1,o=null;e;){if(t.isHighlightWrapNode(e)&&(o=e),e===n){r=!0;break}e=e.parentNode}return r?o:null};t.getHighlightId=function(e,t){return(e=l(e,t))?e.dataset[a.CAMEL_DATASET_IDENTIFIER]:""};t.getExtraHighlightId=function(e,t){return(e=l(e,t))?e.dataset[a.CAMEL_DATASET_IDENTIFIER_EXTRA].split(a.ID_DIVISION).filter((function(e){return e})):[]};t.getHighlightsByRoot=function(e,t){var n,o;Array.isArray(e)||(e=[e]);var i=[];try{for(var l=r(e),u=l.next();!u.done;u=l.next()){var s=u.value.querySelectorAll(t+"[data-"+a.DATASET_IDENTIFIER+"]");i.push.apply(i,s)}}catch(e){n={error:e}}finally{try{u&&!u.done&&(o=l.return)&&o.call(l)}finally{if(n)throw n.error}}return i};t.getHighlightById=function(e,t,n){var o,i,l=[],u=new RegExp("("+t+"\\"+a.ID_DIVISION+"|\\"+a.ID_DIVISION+"?"+t+"$)"),s=e.querySelectorAll(n+"[data-"+a.DATASET_IDENTIFIER+"]");try{for(var d=r(s),c=d.next();!c.done;c=d.next()){var f=c.value;if(f.dataset[a.CAMEL_DATASET_IDENTIFIER]!==t){var h=f.dataset[a.CAMEL_DATASET_IDENTIFIER_EXTRA];u.test(h)&&l.push(f)}else l.push(f)}}catch(e){o={error:e}}finally{try{c&&!c.done&&(i=d.return)&&i.call(d)}finally{if(o)throw o.error}}return l};t.forEach=function(e,t){for(var n=0;n<e.length;n++)t(e[n],n,e)};t.removeEventListener=function(e,t,n){e.removeEventListener(t,n)};t.addEventListener=function(e,n,r){return e.addEventListener(n,r),function(){t.removeEventListener(e,n,r)}};t.addClass=function(e,t){var n;Array.isArray(t)||(t=[t]),(n=e.classList).add.apply(n,i(t))};t.removeClass=function(e,t){e.classList.remove(t)};t.removeAllClass=function(e){e.className=""};t.hasClass=function(e,t){return e.classList.contains(t)}},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(3)),i=n(1),a=n(11),l=r(n(6)),u=n(12),s=n(0),d=function(){function e(e,t,n,r,o){void 0===o&&(o=!1),3===e.$node.nodeType&&3===t.$node.nodeType||s.eventEmitter.emit(s.INTERNAL_ERROR_EVENT,{type:i.ERROR.RANGE_NODE_INVALID}),this.start=u.formatDomNode(e),this.end=u.formatDomNode(t),this.text=n,this.frozen=o,this.id=r}return e.fromSelection=function(t){var n=a.getDomRange();if(!n)return null;var r={$node:n.startContainer,offset:n.startOffset},o={$node:n.endContainer,offset:n.endOffset},i=n.toString(),u=t.call(r,o,i);return new e(r,o,i,u=null!=u?u:l.default())},e.prototype.serialize=function(e,t){var n,r=u.getDomMeta(this.start.$node,this.start.offset,e),i=u.getDomMeta(this.end.$node,this.end.offset,e);return t.Serialize.RecordInfo.isEmpty()||(n=t.Serialize.RecordInfo.call(this.start,this.end,e)),this.frozen=!0,new o.default(r,i,this.text,this.id,n)},e.removeDomRange=a.removeSelection,e}();t.default=d},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function e(t){return t?(t^16*Math.random()>>t/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,e)}},function(e,t,n){e.exports=n(8)},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=a(n(2)),u=a(n(5)),s=a(n(3)),d=a(n(6)),c=a(n(13)),f=a(n(14)),h=a(n(16)),p=a(n(17)),E=n(0),_=n(1),v=n(4),T=function(e){function t(t){var n=e.call(this)||this;n.event=f.default(),n.run=function(){return v.addEventListener(n.options.$root,n.event.PointerEnd,n._handleSelection)},n.stop=function(){v.removeEventListener(n.options.$root,n.event.PointerEnd,n._handleSelection)},n.addClass=function(e,t){n.getDoms(t).forEach((function(t){v.addClass(t,e)}))},n.removeClass=function(e,t){n.getDoms(t).forEach((function(t){v.removeClass(t,e)}))},n.getIdByDom=function(e){return v.getHighlightId(e,n.options.$root)},n.getExtraIdByDom=function(e){return v.getExtraHighlightId(e,n.options.$root)},n.getDoms=function(e){return e?v.getHighlightById(n.options.$root,e,n.options.wrapTag):v.getHighlightsByRoot(n.options.$root,n.options.wrapTag)},n.dispose=function(){var e=n.options.$root;v.removeEventListener(e,n.event.PointerOver,n._handleHighlightHover),v.removeEventListener(e,n.event.PointerEnd,n._handleSelection),v.removeEventListener(e,n.event.PointerTap,n._handleHighlightClick),n.removeAll()},n.setOption=function(e){n.options=i(i({},n.options),e),n.painter=new p.default({$root:n.options.$root,wrapTag:n.options.wrapTag,className:n.options.style.className,exceptSelectors:n.options.exceptSelectors},n.hooks)},n.fromRange=function(e){var t={$node:e.startContainer,offset:e.startOffset},r={$node:e.endContainer,offset:e.endOffset},o=e.toString(),i=n.hooks.Render.UUID.call(t,r,o);i=null!=i?i:d.default();var a=new u.default(t,r,o,i);return a?n._highlightFromHRange(a):(E.eventEmitter.emit(E.INTERNAL_ERROR_EVENT,{type:_.ERROR.RANGE_INVALID}),null)},n.fromStore=function(e,t,r,o,i){var a=new s.default(e,t,r,o,i);try{return n._highlightFromHSource(a),a}catch(e){return E.eventEmitter.emit(E.INTERNAL_ERROR_EVENT,{type:_.ERROR.HIGHLIGHT_SOURCE_RECREATE,error:e,detail:a}),null}},n._getHooks=function(){return{Render:{UUID:new c.default("Render.UUID"),SelectedNodes:new c.default("Render.SelectedNodes"),WrapNode:new c.default("Render.WrapNode")},Serialize:{Restore:new c.default("Serialize.Restore"),RecordInfo:new c.default("Serialize.RecordInfo")},Remove:{UpdateNodes:new c.default("Remove.UpdateNodes")}}},n._highlightFromHRange=function(e){var t=e.serialize(n.options.$root,n.hooks);return 0===n.painter.highlightRange(e).length?(E.eventEmitter.emit(E.INTERNAL_ERROR_EVENT,{type:_.ERROR.DOM_SELECTION_EMPTY}),null):(n.cache.save(t),n.emit(_.EventType.CREATE,{sources:[t],type:_.CreateFrom.INPUT},n),t)},n._handleSelection=function(){var e=u.default.fromSelection(n.hooks.Render.UUID);e&&(n._highlightFromHRange(e),u.default.removeDomRange())},n._handleHighlightHover=function(e){var t=e.target;if(!v.isHighlightWrapNode(t))return n._hoverId&&n.emit(_.EventType.HOVER_OUT,{id:n._hoverId},n,e),void(n._hoverId=null);var r=v.getHighlightId(t,n.options.$root);n._hoverId!==r&&(n._hoverId&&n.emit(_.EventType.HOVER_OUT,{id:n._hoverId},n,e),n._hoverId=r,n.emit(_.EventType.HOVER,{id:n._hoverId},n,e))},n._handleError=function(e){n.options.verbose&&console.warn(e)},n._handleHighlightClick=function(e){var t=e.target;if(v.isHighlightWrapNode(t)){var r=v.getHighlightId(t,n.options.$root);n.emit(_.EventType.CLICK,{id:r},n,e)}},n.options=E.getDefaultOptions(),n.hooks=n._getHooks(),n.setOption(t),n.cache=new h.default;var r=n.options.$root;return v.addEventListener(r,n.event.PointerOver,n._handleHighlightHover),v.addEventListener(r,n.event.PointerTap,n._handleHighlightClick),E.eventEmitter.on(E.INTERNAL_ERROR_EVENT,n._handleError),n}return o(t,e),t.prototype.remove=function(e){if(e){var t=this.painter.removeHighlight(e);this.cache.remove(e),t&&this.emit(_.EventType.REMOVE,{ids:[e]},this)}},t.prototype.removeAll=function(){this.painter.removeAllHighlight();var e=this.cache.removeAll();this.emit(_.EventType.REMOVE,{ids:e},this)},t.prototype._highlightFromHSource=function(e){void 0===e&&(e=[]);var t=this.painter.highlightSource(e);this.emit(_.EventType.CREATE,{sources:t,type:_.CreateFrom.STORE},this),this.cache.save(e)},t.event=_.EventType,t.isHighlightWrapNode=v.isHighlightWrapNode,t.isHighlightSource=function(e){return!!e.__isHighlightSource},t}(l.default);t.default=T},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.queryElementNode=t.getTextChildByOffset=void 0;var r=n(0);t.getTextChildByOffset=function(e,t){for(var n=[e],r=null,o=0,i=0;r=n.pop();){for(var a=r.childNodes,l=a.length-1;l>=0;l--)n.push(a[l]);if(3===r.nodeType&&(i=t-o,(o+=r.textContent.length)>=t))break}return r||(r=e),{$node:r,offset:i}};t.queryElementNode=function(e,t){return{start:e.startMeta.parentIndex===r.ROOT_IDX?t:t.getElementsByTagName(e.startMeta.parentTagName)[e.startMeta.parentIndex],end:e.endMeta.parentIndex===r.ROOT_IDX?t:t.getElementsByTagName(e.endMeta.parentTagName)[e.endMeta.parentIndex]}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e.split("-").reduce((function(e,t,n){return e+(0===n?t:t[0].toUpperCase()+t.slice(1))}),"")}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.removeSelection=t.getDomRange=void 0;t.getDomRange=function(){var e=window.getSelection();return e.isCollapsed?(console.debug("no text selected"),null):e.getRangeAt(0)};t.removeSelection=function(){window.getSelection().removeAllRanges()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatDomNode=t.getDomMeta=void 0;var r=n(0);t.getDomMeta=function(e,t,n){var o=function(e){if(e instanceof HTMLElement&&(!e.dataset||!e.dataset[r.CAMEL_DATASET_IDENTIFIER]))return e;for(var t=e.parentNode;null==t?void 0:t.dataset[r.CAMEL_DATASET_IDENTIFIER];)t=t.parentNode;return t}(e),i=o===n?r.ROOT_IDX:function(e,t){for(var n=e.tagName,o=t.getElementsByTagName(n),i=0;i<o.length;i++)if(e===o[i])return i;return r.UNKNOWN_IDX}(o,n),a=function(e,t){for(var n=[e],r=null,o=0;r=n.pop();){for(var i=r.childNodes,a=i.length-1;a>=0;a--)n.push(i[a]);if(3===r.nodeType&&r!==t)o+=r.textContent.length;else if(3===r.nodeType)break}return o}(o,e);return{parentTagName:o.tagName,parentIndex:i,textOffset:a+t}};t.formatDomNode=function(e){return 3===e.$node.nodeType||4===e.$node.nodeType||8===e.$node.nodeType?e:{$node:e.$node.childNodes[e.offset],offset:0}}},function(e,t,n){"use strict";var r=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},o=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(r(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e){this.name="",this.ops=[],this.name=e}return e.prototype.tap=function(e){var t=this;return-1===this.ops.indexOf(e)&&this.ops.push(e),function(){t.remove(e)}},e.prototype.remove=function(e){var t=this.ops.indexOf(e);t<0||this.ops.splice(t,1)},e.prototype.isEmpty=function(){return 0===this.ops.length},e.prototype.call=function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return this.ops.forEach((function(n){e=n.apply(void 0,o(t))})),e},e}();t.default=i},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),i=r(n(15));t.default=function(){var e=i.default(window.navigator.userAgent);return{PointerEnd:e?o.UserInputEvent.touchend:o.UserInputEvent.mouseup,PointerTap:e?o.UserInputEvent.touchstart:o.UserInputEvent.click,PointerOver:e?o.UserInputEvent.touchstart:o.UserInputEvent.mouseover}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=/Android|iPhone|BlackBerry|BB10|Opera Mini|Phone|Mobile|Silk|Windows Phone|Mobile(?:.+)Firefox\b/i;t.default=function(e){return r.test(e)}},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=a(n(2)),u=n(1),s=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._data=new Map,t}return o(t,e),Object.defineProperty(t.prototype,"data",{get:function(){return this.getAll()},set:function(e){throw u.ERROR.CACHE_SET_ERROR},enumerable:!1,configurable:!0}),t.prototype.save=function(e){var t=this;Array.isArray(e)?e.forEach((function(e){return t._data.set(e.id,e)})):this._data.set(e.id,e)},t.prototype.get=function(e){return this._data.get(e)},t.prototype.remove=function(e){this._data.delete(e)},t.prototype.getAll=function(){var e,t,n=[];try{for(var r=i(this._data),o=r.next();!o.done;o=r.next()){var a=o.value;n.push(a[1])}}catch(t){e={error:t}}finally{try{o&&!o.done&&(t=r.return)&&t.call(r)}finally{if(e)throw e.error}}return n},t.prototype.removeAll=function(){var e,t,n=[];try{for(var r=i(this._data),o=r.next();!o.done;o=r.next()){var a=o.value;n.push(a[0])}}catch(t){e={error:t}}finally{try{o&&!o.done&&(t=r.return)&&t.call(r)}finally{if(e)throw e.error}}return this._data=new Map,n},t}(l.default);t.default=s},function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},o=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},i=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(o(arguments[t]));return e},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=a(n(3)),u=n(18),s=n(4),d=n(1),c=n(20),f=n(0),h=function(){function e(e,t){this.options={$root:e.$root,wrapTag:e.wrapTag,exceptSelectors:e.exceptSelectors,className:e.className},this.hooks=t,c.initDefaultStylesheet()}return e.prototype.highlightRange=function(e){var t=this;if(!e.frozen)throw d.ERROR.HIGHLIGHT_RANGE_FROZEN;var n=this.options,r=n.$root,o=n.className,i=n.exceptSelectors,a=this.hooks,l=u.getSelectedNodes(r,e.start,e.end,i);return a.Render.SelectedNodes.isEmpty()||(l=a.Render.SelectedNodes.call(e.id,l)||[]),l.map((function(n){var r=u.wrapHighlight(n,e,o,t.options.wrapTag);return a.Render.WrapNode.isEmpty()||(r=a.Render.WrapNode.call(e.id,r)),r}))},e.prototype.highlightSource=function(e){var t=this,n=Array.isArray(e)?e:[e],r=[];return n.forEach((function(e){if(e instanceof l.default){var n=e.deSerialize(t.options.$root,t.hooks);t.highlightRange(n).length>0?r.push(e):f.eventEmitter.emit(f.INTERNAL_ERROR_EVENT,{type:d.ERROR.HIGHLIGHT_SOURCE_NONE_RENDER,detail:e})}else f.eventEmitter.emit(f.INTERNAL_ERROR_EVENT,{type:d.ERROR.SOURCE_TYPE_ERROR})})),r},e.prototype.removeHighlight=function(e){var t,n,o=new RegExp("("+e+"\\"+f.ID_DIVISION+"|\\"+f.ID_DIVISION+"?"+e+"$)"),a=this.hooks,l=this.options.wrapTag,d=document.querySelectorAll(l+"[data-"+f.DATASET_IDENTIFIER+"]"),c=[],h=[],p=[];try{for(var E=r(d),_=E.next();!_.done;_=E.next()){var v=_.value,T=v.dataset[f.CAMEL_DATASET_IDENTIFIER],y=v.dataset[f.CAMEL_DATASET_IDENTIFIER_EXTRA];T!==e||y?T===e?h.push(v):T!==e&&o.test(y)&&p.push(v):c.push(v)}}catch(e){t={error:e}}finally{try{_&&!_.done&&(n=E.return)&&n.call(E)}finally{if(t)throw t.error}}return c.forEach((function(t){var n=t.parentNode,r=document.createDocumentFragment();s.forEach(t.childNodes,(function(e){return r.appendChild(e.cloneNode(!1))}));var o=t.previousSibling,i=t.nextSibling;n.replaceChild(r,t),u.normalizeSiblingText(o,!0),u.normalizeSiblingText(i,!1),a.Remove.UpdateNodes.call(e,t,"remove")})),h.forEach((function(t){var n=t.dataset,r=n[f.CAMEL_DATASET_IDENTIFIER_EXTRA].split(f.ID_DIVISION),o=r.shift(),u=document.querySelector(l+"[data-"+f.DATASET_IDENTIFIER+'="'+o+'"]');u&&(s.removeAllClass(t),s.addClass(t,i(u.classList))),n[f.CAMEL_DATASET_IDENTIFIER]=o,n[f.CAMEL_DATASET_IDENTIFIER_EXTRA]=r.join(f.ID_DIVISION),a.Remove.UpdateNodes.call(e,t,"id-update")})),p.forEach((function(t){var n=t.dataset[f.CAMEL_DATASET_IDENTIFIER_EXTRA];t.dataset[f.CAMEL_DATASET_IDENTIFIER_EXTRA]=n.replace(o,""),a.Remove.UpdateNodes.call(e,t,"extra-update")})),c.length+h.length+p.length!==0},e.prototype.removeAllHighlight=function(){var e=this.options,t=e.wrapTag,n=e.$root;s.getHighlightsByRoot(n,t).forEach((function(e){var t=e.parentNode,n=document.createDocumentFragment();s.forEach(e.childNodes,(function(e){return n.appendChild(e.cloneNode(!1))})),t.replaceChild(n,e)}))},e}();t.default=h},function(e,t,n){"use strict";var r=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},o=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(r(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0}),t.normalizeSiblingText=t.wrapHighlight=t.getSelectedNodes=void 0;var i=n(1),a=n(4),l=n(0),u=n(19),s=function(e,t){if(!e)return!1;if(/^\./.test(t)){var n=t.replace(/^\./,"");return e&&a.hasClass(e,n)}if(/^#/.test(t)){var r=t.replace(/^#/,"");return e&&e.id===r}var o=t.toUpperCase();return e&&e.tagName===o};t.getSelectedNodes=function(e,t,n,r){var o=t.$node,a=n.$node,l=t.offset,u=n.offset;if(o===a&&o instanceof Text)return function(e,t,n,r){for(var o=e,a=function(e){return null==r?void 0:r.some((function(t){return s(e,t)}))};o;){if(1===o.nodeType&&a(o))return[];o=o.parentNode}e.splitText(t);var l=e.nextSibling;return l.splitText(n-t),[{$node:l,type:i.SelectedNodeType.text,splitType:i.SplitType.both}]}(o,l,u,r);for(var d=[e],c=[],f=function(e){return null==r?void 0:r.some((function(t){return s(e,t)}))},h=!1,p=null;p=d.pop();)if(1!==p.nodeType||!f(p)){for(var E=p.childNodes,_=E.length-1;_>=0;_--)d.push(E[_]);if(p===o){if(3===p.nodeType){p.splitText(l);var v=p.nextSibling;c.push({$node:v,type:i.SelectedNodeType.text,splitType:i.SplitType.head})}h=!0}else{if(p===a){if(3===p.nodeType)(v=p).splitText(u),c.push({$node:v,type:i.SelectedNodeType.text,splitType:i.SplitType.tail});break}h&&3===p.nodeType&&c.push({$node:p,type:i.SelectedNodeType.text,splitType:i.SplitType.none})}}return c};var d=function(e,t){var n=Array.isArray(t)?t:[t];return(n=0===n.length?[l.getDefaultOptions().style.className]:n).forEach((function(t){a.addClass(e,t)})),e},c=function(e){return!e||!e.textContent};t.wrapHighlight=function(e,t,n,r){var s=e.$node.parentNode,f=e.$node.previousSibling,h=e.$node.nextSibling;return a.isHighlightWrapNode(s)?!a.isHighlightWrapNode(s)||c(f)&&c(h)?function(e,t,n){var r=e.$node.parentNode,o=r;a.removeAllClass(o),d(o,n);var i=r.dataset,u=i[l.CAMEL_DATASET_IDENTIFIER];return i[l.CAMEL_DATASET_IDENTIFIER]=t.id,i[l.CAMEL_DATASET_IDENTIFIER_EXTRA]=i[l.CAMEL_DATASET_IDENTIFIER_EXTRA]?u+l.ID_DIVISION+i[l.CAMEL_DATASET_IDENTIFIER_EXTRA]:u,o}(e,t,n):function(e,t,n,r){var a=document.createElement(r),s=e.$node.parentNode,c=e.$node.previousSibling,f=e.$node.nextSibling,h=document.createDocumentFragment(),p=s.dataset[l.CAMEL_DATASET_IDENTIFIER],E=s.dataset[l.CAMEL_DATASET_IDENTIFIER_EXTRA],_=E?p+l.ID_DIVISION+E:p;a.setAttribute("data-"+l.DATASET_IDENTIFIER,t.id),a.setAttribute("data-"+l.DATASET_IDENTIFIER_EXTRA,_),a.appendChild(e.$node.cloneNode(!1));var v,T=!1,y=!1;c&&((g=s.cloneNode(!1)).textContent=c.textContent,h.appendChild(g),T=!0);var g,I=[];(Array.isArray(n)?I.push.apply(I,o(n)):I.push(n),d(a,u.unique(I)),h.appendChild(a),f)&&((g=s.cloneNode(!1)).textContent=f.textContent,h.appendChild(g),y=!0);return v=T&&y?i.SplitType.both:T?i.SplitType.head:y?i.SplitType.tail:i.SplitType.none,a.setAttribute("data-"+l.DATASET_SPLIT_TYPE,v),s.parentNode.replaceChild(h,s),a}(e,t,n,r):function(e,t,n,r){var o=document.createElement(r);return d(o,n),o.appendChild(e.$node.cloneNode(!1)),e.$node.parentNode.replaceChild(o,e.$node),o.setAttribute("data-"+l.DATASET_IDENTIFIER,t.id),o.setAttribute("data-"+l.DATASET_SPLIT_TYPE,e.splitType),o.setAttribute("data-"+l.DATASET_IDENTIFIER_EXTRA,""),o}(e,t,n,r)};t.normalizeSiblingText=function(e,t){if(void 0===t&&(t=!0),e&&3===e.nodeType){var n=t?e.nextSibling:e.previousSibling;if(3===n.nodeType){var r=n.nodeValue;e.nodeValue=t?e.nodeValue+r:r+e.nodeValue,n.parentNode.removeChild(n)}}}},function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0}),t.unique=void 0;t.unique=function(e){var t,n,o=[];try{for(var i=r(e),a=i.next();!a.done;a=i.next()){var l=a.value;-1===o.indexOf(l)&&o.push(l)}}catch(e){t={error:e}}finally{try{a&&!a.done&&(n=i.return)&&n.call(i)}finally{if(t)throw t.error}}return o}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.initDefaultStylesheet=void 0;var r=n(0);t.initDefaultStylesheet=function(){var e=r.STYLESHEET_ID,t=document.getElementById(e);if(!t){var n=document.createTextNode(r.getStylesheet());(t=document.createElement("style")).id=e,t.appendChild(n),document.head.appendChild(t)}return t}}]).default}));

},{}]},{},[4])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
